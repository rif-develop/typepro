{"version":3,"sources":["webpack:///./src/sagas/clientSingUpAction.js"],"names":["wathcerSignupEmail","wathcerSignupPassword","wathcerSignupTerms","signUpEmail","signUpPassword","signUpTerms","signUpSubmit","takeLatest","action","email","put","type","error","password","axiosSaga","axios","method","url","data","terms","then","response","console","log","catch","call","e"],"mappings":"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","file":"app.0959101a36c9d6ef4d52.hot-update.js","sourcesContent":["import {call, put, takeLatest} from \"redux-saga/effects\";\r\nimport axios from \"axios\";\r\n\r\nexport function* wathcerSignupEmail() {\r\n    yield takeLatest('SET_SIGN_UP_EMAIL_REQUEST', signUpEmail);\r\n}\r\n\r\nexport function* wathcerSignupPassword() {\r\n    yield takeLatest('SET_SIGN_UP_PASSWORD_REQUEST', signUpPassword);\r\n}\r\n\r\nexport function* wathcerSignupTerms() {\r\n    yield takeLatest('SET_SIGN_UP_TERMS_REQUEST', signUpTerms);\r\n}\r\n\r\nfunction* signUpEmail(action) {\r\n\r\n    const email = action.email;\r\n    try {\r\n        yield put({\r\n            type: \"SET_SIGN_UP_EMAIL_SUCCESS\",\r\n            email\r\n        })\r\n    } catch (error) {\r\n        yield put({\r\n            type: 'SET_SIGN_UP_EMAIL_FAILURE',\r\n            error\r\n        })\r\n    }\r\n}\r\n\r\nfunction* signUpPassword(action) {\r\n\r\n    const password = action.password;\r\n    try {\r\n        yield put({\r\n            type: \"SET_SIGN_UP_PASSWORD_SUCCESS\",\r\n            password\r\n        })\r\n    } catch (error) {\r\n        yield put({\r\n            type: 'SET_SIGN_UP_PASSWORD_FAILURE',\r\n            error\r\n        })\r\n    }\r\n}\r\n\r\nfunction* signUpTerms() {\r\n\r\n    try {\r\n        yield put({\r\n            type: \"SET_SIGN_UP_TERMS_SUCCESS\",\r\n        });\r\n    } catch (error) {\r\n        yield put({\r\n            type: 'SET_SIGN_UP_TERMS_FAILURE',\r\n            error\r\n        });\r\n    }\r\n}\r\n\r\n\r\n/*회원가입*/\r\n\r\nfunction axiosSaga() {\r\n    return axios({\r\n        method: 'post',\r\n        url: '/request/signup',\r\n        data: {\r\n            email: 'Fred',\r\n            password: 'Flintstone',\r\n            terms: ''\r\n        }\r\n    }).then((response) => {\r\n        console.log(response);\r\n    }).catch((error) => {\r\n        console.log(error);\r\n    })\r\n}\r\n\r\nfunction* signUpSubmit(){\r\n    try{\r\n        const response = yield call(axiosSaga);\r\n\r\n        yield put({\r\n            type: 'SET_SIGN_UP_COMPLETE_SUCCESS',\r\n        })\r\n    } catch (e) {\r\n        yield put({\r\n            type: 'SET_SIGN_UP_COMPLETE_FAILURE',\r\n            e\r\n        })\r\n    }\r\n\r\n}"],"sourceRoot":""}