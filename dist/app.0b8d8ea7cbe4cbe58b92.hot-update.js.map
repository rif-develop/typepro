{"version":3,"sources":["webpack:///./src/sagas/clientSingUpAction.js","webpack:///./src/sagas/index.js"],"names":["wathcerSignupEmail","wathcerSignupPassword","signUpEmail","signUpPassword","takeLatest","action","email","put","type","e","password","rootSaga","all","fork","watcherCounter","watcherLanguage","watcherSaga","watcherAutoLogin","wathcerAlarmHeader","wathcerClientInfoHeader","watcherMobileMenu","wathcerWindowWidth","watcherSetting","watcherAddress","wathcerPhoneAuth"],"mappings":";;;;;;;;;;;;;;;;wBAEiBA,kB;;;wBAGAC,qB;;;wBAGPC,W;;;wBAeAC,c;;AAvBV;AAEO,SAAUH,kBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACH,iBAAMI,qEAAU,CAAC,2BAAD,EAA8BF,WAA9B,CAAhB;;AADG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA,SAAUD,qBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACH,iBAAMG,qEAAU,CAAC,8BAAD,EAAiCD,cAAjC,CAAhB;;AADG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAGP,SAAUD,WAAV,CAAsBG,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAEUC,eAFV,GAEkBD,MAAM,CAACC,KAFzB;AAAA;AAAA;AAIQ,iBAAMC,8DAAG,CAAC;AACNC,gBAAI,EAAE,2BADA;AAENF,iBAAK,EAALA;AAFM,WAAD,CAAT;;AAJR;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AASQ,iBAAMC,8DAAG,CAAC;AACNC,gBAAI,EAAE,2BADA;AAENC,aAAC;AAFK,WAAD,CAAT;;AATR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAeA,SAAUN,cAAV,CAAyBE,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAEUC,eAFV,GAEkBD,MAAM,CAACK,QAFzB;AAAA;AAAA;AAIQ,iBAAMH,8DAAG,CAAC;AACNC,gBAAI,EAAE,8BADA;AAENF,iBAAK,EAALA;AAFM,WAAD,CAAT;;AAJR;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AASQ,iBAAMC,8DAAG,CAAC;AACNC,gBAAI,EAAE,8BADA;AAENC,aAAC;AAFK,WAAD,CAAT;;AATR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,C;;;;;;;;;;;;;;;;;;;;;;;;;;;wBCXyBE,Q;;AAZzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEe,SAAUA,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACX,iBAAMC,8DAAG,CAAC,CACNC,+DAAI,CAACC,2DAAD,CADE,EAEND,+DAAI,CAACE,+DAAD,CAFE,EAGNF,+DAAI,CAACG,sDAAD,CAHE,EAINH,+DAAI,CAACI,+DAAD,CAJE,EAKNJ,+DAAI,CAACK,8DAAD,CALE,EAMNL,+DAAI,CAACM,mEAAD,CANE,EAONN,+DAAI,CAACO,6DAAD,CAPE,EAQNP,+DAAI,CAACQ,sEAAD,CARE,EASNR,+DAAI,CAACS,6DAAD,CATE,EAUNT,+DAAI,CAACU,6DAAD,CAVE,EAWNV,+DAAI,CAACW,iEAAD,CAXE,CAAD,CAAT;;AADW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,C","file":"app.0b8d8ea7cbe4cbe58b92.hot-update.js","sourcesContent":["import {put, takeLatest} from \"redux-saga/effects\";\r\n\r\nexport function* wathcerSignupEmail() {\r\n    yield takeLatest('SET_SIGN_UP_EMAIL_REQUEST', signUpEmail);\r\n}\r\nexport function* wathcerSignupPassword() {\r\n    yield takeLatest('SET_SIGN_UP_PASSWORD_REQUEST', signUpPassword);\r\n}\r\nfunction* signUpEmail(action) {\r\n\r\n    const email = action.email\r\n    try {\r\n        yield put({\r\n            type: \"SET_SIGN_UP_EMAIL_SUCCESS\",\r\n            email\r\n        })\r\n    } catch (e) {\r\n        yield put({\r\n            type: 'SET_SIGN_UP_EMAIL_FAILURE',\r\n            e\r\n        })\r\n    }\r\n}\r\nfunction* signUpPassword(action) {\r\n\r\n    const email = action.password;\r\n    try {\r\n        yield put({\r\n            type: \"SET_SIGN_UP_PASSWORD_SUCCESS\",\r\n            email\r\n        })\r\n    } catch (e) {\r\n        yield put({\r\n            type: 'SET_SIGN_UP_PASSWORD_FAILURE',\r\n            e\r\n        })\r\n    }\r\n}\r\n\r\n\r\n","import {all, fork} from 'redux-saga/effects';\r\nimport {watcherCounter} from './counterSaga';\r\nimport {watcherLanguage} from './languageAction';\r\nimport {watcherSaga} from \"./axiosSaga\";\r\nimport {watcherAutoLogin} from \"./autoLoginSaga\";\r\nimport {wathcerAlarmHeader, wathcerClientInfoHeader, watcherMobileMenu} from './headerSaga';\r\nimport {wathcerWindowWidth} from \"./clientStatusAction\";\r\nimport {watcherSetting} from \"./settingAction\";\r\nimport {watcherAddress} from './addressAction';\r\nimport {wathcerPhoneAuth} from \"./phoneAuthAction\";\r\nimport {wathcerSignupEmail, wathcerSignupPassword} from './clientSingUpAction'\r\n\r\nexport default function* rootSaga(){\r\n    yield all([\r\n        fork(watcherCounter),\r\n        fork(watcherLanguage),\r\n        fork(watcherSaga),\r\n        fork(watcherAutoLogin),\r\n        fork(wathcerAlarmHeader),\r\n        fork(wathcerClientInfoHeader),\r\n        fork(watcherMobileMenu),\r\n        fork(wathcerWindowWidth),\r\n        fork(watcherSetting),\r\n        fork(watcherAddress),\r\n        fork(wathcerPhoneAuth)\r\n    ]);\r\n}\r\n\r\n\r\n"],"sourceRoot":""}